/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package systems.tech247.endeavourentities;

import java.sql.Connection;
import java.sql.DriverManager;
import java.util.Properties;
import org.openide.awt.StatusDisplayer;
import org.openide.util.NbPreferences;

final class DatabaseSettingsPanel extends javax.swing.JPanel {

    private final DatabaseSettingsOptionsPanelController controller;

    DatabaseSettingsPanel(DatabaseSettingsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtDBServername = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtLogin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtDBPort = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jpDBPassword = new javax.swing.JPasswordField();
        jbTestConnection = new javax.swing.JButton();
        jlblTestConnection = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtDBName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtDBServernameLive = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jtDBNameLive = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtLoginLive = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jpDBPasswordLive = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        jtDBPortLive = new javax.swing.JTextField();
        jbTestConnectionLive = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jcbUseDemo = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel1.text")); // NOI18N

        jtDBServername.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBServername.text")); // NOI18N
        jtDBServername.setToolTipText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBServername.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel2.text")); // NOI18N

        jtLogin.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtLogin.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel3.text")); // NOI18N

        jtDBPort.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBPort.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel4.text")); // NOI18N

        jpDBPassword.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jpDBPassword.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jbTestConnection, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jbTestConnection.text")); // NOI18N
        jbTestConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTestConnectionActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jlblTestConnection, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jlblTestConnection.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel5.text")); // NOI18N

        jtDBName.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBName.text")); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel6.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel7, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel7.text")); // NOI18N

        jtDBServernameLive.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBServernameLive.text")); // NOI18N
        jtDBServernameLive.setToolTipText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBServernameLive.toolTipText")); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel8, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel8.text")); // NOI18N

        jtDBNameLive.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBNameLive.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel9, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel9.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel10, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel10.text")); // NOI18N

        jtLoginLive.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtLoginLive.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel11, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel11.text")); // NOI18N

        jpDBPasswordLive.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jpDBPasswordLive.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel12, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel12.text")); // NOI18N

        jtDBPortLive.setText(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jtDBPortLive.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jbTestConnectionLive, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jbTestConnectionLive.text")); // NOI18N
        jbTestConnectionLive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTestConnectionLiveActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel13, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel13.text")); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel14, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jLabel14.text")); // NOI18N

        jcbUseDemo.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(jcbUseDemo, org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jcbUseDemo.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtDBServername, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(jtLogin, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(jpDBPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(jtDBPort, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                                    .addComponent(jbTestConnection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtDBName)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbUseDemo)
                            .addComponent(jLabel6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(15, 15, 15)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtDBServernameLive)
                                    .addComponent(jtDBNameLive)
                                    .addComponent(jtLoginLive)
                                    .addComponent(jpDBPasswordLive)
                                    .addComponent(jtDBPortLive)
                                    .addComponent(jbTestConnectionLive, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)))
                .addContainerGap(116, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblTestConnection, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jbTestConnection, jpDBPassword, jtDBName, jtDBPort, jtDBServername, jtLogin});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jcbUseDemo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtDBServername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtDBName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jpDBPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtDBPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbTestConnection)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jtDBServernameLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtDBNameLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jtLoginLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jpDBPasswordLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtDBPortLive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbTestConnectionLive)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jlblTestConnection, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(DatabaseSettingsPanel.class, "DatabaseSettingsPanel.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbTestConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTestConnectionActionPerformed
        String connectionUrl = "jdbc:sqlserver://"+
                jtDBServername.getText()+":"+
                jtDBPort.getText()+";databaseName="+
                jtDBName.getText()+";user="+
                jtLogin.getText()+";password="+
                jpDBPassword.getText();
        
        Connection con =  null;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection(connectionUrl);
            Properties p=con.getClientInfo();
            jlblTestConnection.setText("Connected");
        }catch(Exception ex){
            jlblTestConnection.setText(ex.getLocalizedMessage());
        }
                
                
    }//GEN-LAST:event_jbTestConnectionActionPerformed

    private void jbTestConnectionLiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTestConnectionLiveActionPerformed
       String connectionUrl = "jdbc:sqlserver://"+
                jtDBServernameLive.getText()+":"+
                jtDBPortLive.getText()+";databaseName="+
                jtDBNameLive.getText()+";user="+
                jtLoginLive.getText()+";password="+
                jpDBPasswordLive.getText();
        
        Connection con =  null;
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            con = DriverManager.getConnection(connectionUrl);
            Properties p=con.getClientInfo();
            jlblTestConnection.setText("Connected Live");
        }catch(Exception ex){
            jlblTestConnection.setText(ex.getLocalizedMessage());
        }
    }//GEN-LAST:event_jbTestConnectionLiveActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(DatabaseSettingsPanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(DatabaseSettingsPanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        
        // Retrieve the server name
        jtDBServername.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBServerName", ""));
        // Retrieve the login name
        jtLogin.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBLogin", ""));
        // Get the Password
        jpDBPassword.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBPassword", ""));
        // Get Server Port
        jtDBPort.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBPort", ""));
        // Get DBName
        jtDBName.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBName", ""));
        // Get Live ServerName
        jtDBServernameLive.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBServerNameLive", ""));
        // Retrieve the live login name
        jtLoginLive.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBLoginLive", ""));
        // Get Live Password
        jpDBPasswordLive.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBPasswordLive", ""));
        // Get Live Server Port
        jtDBPortLive.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBPortLive", ""));
        // Get DBName Live
        jtDBNameLive.setText(NbPreferences.forModule(DatabaseSettingsPanel.class).get("DBNameLive", ""));
        
        try{
            if(NbPreferences.forModule(DatabaseSettingsPanel.class).get("UseDemo", "").equals("true")){
                jcbUseDemo.setSelected(true);
            }else{
                jcbUseDemo.setSelected(false);
            }
        }catch(Exception ex){
            StatusDisplayer.getDefault().setStatusText(ex.getLocalizedMessage());
        }
        
        
    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(DatabaseSettingsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(DatabaseSettingsPanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBServerName", jtDBServername.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBLogin", jtLogin.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBPassword", jpDBPassword.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBPort", jtDBPort.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBName", jtDBName.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBServerNameLive", jtDBServernameLive.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBLoginLive", jtLoginLive.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBPasswordLive", jpDBPasswordLive.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBPortLive", jtDBPortLive.getText());
        NbPreferences.forModule(DatabaseSettingsPanel.class).put("DBNameLive", jtDBNameLive.getText());
        if(jcbUseDemo.isSelected()){
            NbPreferences.forModule(DatabaseSettingsPanel.class).put("UseDemo", "true");
        }else{
            NbPreferences.forModule(DatabaseSettingsPanel.class).put("UseDemo", "false");
        }
        
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        if(!jtDBPort.getText().equals("")){
            
            String portNumber = jtDBPort.getText();
            try{
                int port = new Integer(portNumber);
            }catch(Exception ex){
                ex.printStackTrace();
                return false;
            }
            
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbTestConnection;
    private javax.swing.JButton jbTestConnectionLive;
    private javax.swing.JCheckBox jcbUseDemo;
    private javax.swing.JLabel jlblTestConnection;
    private javax.swing.JPasswordField jpDBPassword;
    private javax.swing.JPasswordField jpDBPasswordLive;
    private javax.swing.JTextField jtDBName;
    private javax.swing.JTextField jtDBNameLive;
    private javax.swing.JTextField jtDBPort;
    private javax.swing.JTextField jtDBPortLive;
    private javax.swing.JTextField jtDBServername;
    private javax.swing.JTextField jtDBServernameLive;
    private javax.swing.JTextField jtLogin;
    private javax.swing.JTextField jtLoginLive;
    // End of variables declaration//GEN-END:variables
}
